{"version":3,"sources":["components/Buscador.js","components/CardImagen.js","components/Paginacion.js","components/Resultado.js","App.js","serviceWorker.js","index.js"],"names":["Buscado","BusquedaRef","React","createRef","obtenerDatos","e","preventDefault","termino","current","value","props","onSubmit","this","className","type","ref","placeholder","Component","CardImagen","image","previewURL","tags","likes","downloads","favorites","pageURL","src","alt","href","target","rel","Paginacion","onClick","paginaAnterior","paginaSiguiente","Resultado","mostrarImagenes","imagenes","length","Fragment","map","img","key","id","App","state","pagina","scroll","document","querySelector","scrollIntoView","setState","consutarApi","a","url","fetch","then","datos","json","resultado","hits","datosBusqueda","Buscador","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.25251b4c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Buscado extends Component {\r\n    \r\n    BusquedaRef = React.createRef();\r\n    \r\n    obtenerDatos = (e) => {\r\n        e.preventDefault();\r\n        const termino = this.BusquedaRef.current.value;\r\n        this.props.termino(termino)\r\n    }\r\n\r\n    render() {     \r\n        return ( \r\n            <form onSubmit={this.obtenerDatos}>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-md-8\">\r\n                    <input type=\"text\" ref={this.BusquedaRef}  className=\"form-control form-control-lg\" placeholder=\"Busca tu imagen\"/>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                    <input type=\"submit\"  className=\"btn btn-outline-primary btn-block btn-lg\" value=\"Buscar Imagen\"/>\r\n                </div>\r\n            </div>\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Buscado;","import React from 'react';\r\n\r\nconst CardImagen = (props) =>{\r\n    const {previewURL,tags, likes,downloads,favorites,pageURL} = props.image;\r\n    return(\r\n        <div className=\"col-lg-3 p-1\">\r\n        <div className=\"card \">\r\n            <img src={previewURL} className=\"card-img-top img-card\" alt={tags}/>\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\">{likes} Me gusta</p>\r\n                <p className=\"card-text\">{favorites} Descargas</p>\r\n                <p className=\"card-text\">{downloads} Descargas</p>\r\n                <a href={pageURL} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-block btn-outline-warning\">Ver imagen</a>\r\n                </div>\r\n        </div>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default CardImagen","import React from 'react'\r\n\r\nconst Paginacion = (props)=> {\r\n    return (\r\n        <div className=\"py-3\">\r\n            <button type=\"button\" onClick={props.paginaAnterior} className=\"btn btn-info mr-1\">Anterior &larr;</button>\r\n            <button type=\"button\" onClick={props.paginaSiguiente} className=\"btn btn-info mr-1\">Siguiente &rarr;</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginacion\r\n","import React, { Component } from 'react';\r\nimport CardImagen from './CardImagen';\r\nimport Paginacion from './Paginacion';\r\n\r\nclass Resultado extends Component {\r\n    mostrarImagenes = () =>{\r\n        const imagenes = this.props.imagenes;\r\n        if(imagenes.length === 0) return null\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                {\r\n                    imagenes.map(img => <CardImagen key={img.id} image={img} />)\r\n                }\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                <Paginacion\r\n                paginaSiguiente={this.props.paginaSiguiente} \r\n                paginaAnterior={this.props.paginaAnterior} \r\n                />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            {this.mostrarImagenes()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Resultado;","import React, { Component } from 'react';\nimport './App.css';\nimport Buscador from './components/Buscador'\nimport Resultado from './components/Resultado'\n\nclass  App extends Component {\n\n  state = {\n    termino: 'car',\n    imagenes: [],\n    pagina: ''\n  }\n\n  scroll = () =>{\n    const elemento = document.querySelector('.jumbotron');\n    elemento.scrollIntoView('smooth','start')\n  }\n\n  paginaAnterior = () =>{\n    let pagina = this.state.pagina;\n    \n    if(pagina === 1) return null;\n\n    pagina--;\n\n    this.setState({\n      pagina: pagina\n    },()=>{\n      this.consutarApi()\n      this.scroll();\n    });\n    \n  }\n  paginaSiguiente = () =>{\n    let pagina = this.state.pagina;\n    pagina++;\n    this.setState({\n      pagina: pagina\n    },()=>{\n      this.consutarApi()\n      this.scroll();\n    });\n    \n\n  }\n\n    consutarApi = async()=>{\n      const termino = this.state.termino;\n      const pagina = this.state.pagina;\n      const url = `https://pixabay.com/api/?key=18471271-03aee137e0067d562727ae01e&q=${termino}&min_width=800&min_height=800&per_page=32&page=${pagina}&image_type=photo&pretty=true`;\n      fetch(url)\n        .then(datos => datos.json())\n        .then(resultado => this.setState({ imagenes: resultado.hits}))\n      \n    }\n\n  datosBusqueda = (termino) =>{\n\n    if(termino.length > 2){\n      this.setState({\n        termino: termino,\n        pagina: 1\n      },()=>{this.consutarApi()})  \n    }\n    \n  }\n  render(){\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n      <p className=\"lead text-center\">Buscador de imagenes</p>\n      <Buscador termino={this.datosBusqueda}/>\n      </div>\n      {\n\n       <Resultado  \n        imagenes={this.state.imagenes} \n        paginaSiguiente={this.paginaSiguiente} \n        paginaAnterior={this.paginaAnterior} \n        />\n      \n      }\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './boostwatch/bootstrap.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}